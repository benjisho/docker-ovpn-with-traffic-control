version: '3.8'

services:
  tc-server:
    build:
      context: ./
      dockerfile: Dockerfile_TC
    restart: always
    network_mode: host
    environment:
      TCGUI_IP: 0.0.0.0
      TCGUI_PORT: 5000
    ports:
      - 5000:5000
    cap_add:
      - NET_ADMIN
      
  openvpn_client_no_tc:
    container_name: openvpn_client_no_tc
    build:
      context: ./
      dockerfile: Dockerfile_openvpn_client
    cap_add:
      - NET_ADMIN
    security_opt:
      - label:disable
    restart: unless-stopped
    volumes:
      - ./vpn/client.ovpn:/vpn/client.ovpn
    environment:
      TZ: 'EST5EDT'
    # if using '-d' or 'DNS' you can't enable the `read_only: true` option
    read_only: true
    tmpfs:
      - /run
      - /tmp
    networks:
      vpn_net:
        ipv4_address: 10.9.96.5  # Ensure this IP is not in use
    command: /bin/bash -c "openvpn --config /vpn/client.ovpn && ip route add default via 192.168.52.1 dev eth1"

  openvpn_client_with_tc:
    container_name: openvpn_client_with_tc
    build:
      context: ./
      dockerfile: Dockerfile_openvpn_client
    cap_add:
      - NET_ADMIN
    security_opt:
      - label:disable
    restart: unless-stopped
    volumes:
      - ./vpn/client.ovpn:/vpn/client.ovpn
    environment:
      TZ: 'EST5EDT'
    # if using '-d' or 'DNS' you can't enable the `read_only: true` option
    read_only: true
    tmpfs:
      - /run
      - /tmp
    networks:
      vpn_net:
        ipv4_address: 10.9.96.4  # Ensure this IP is not in use
    command: /bin/bash -c "openvpn --config /vpn/client.ovpn && ip route add default via 192.168.52.1 dev eth1"

networks:
  vpn_net:
    driver: macvlan
    driver_opts:
      parent: enp8s0  # Inbound interface
    ipam:
      config:
        - subnet: 10.9.96.0/24
          #gateway: 10.9.96.254  # Change to the actual gateway of your eth0 network
